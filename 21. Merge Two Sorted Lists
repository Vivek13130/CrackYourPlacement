/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        // creating a new LL is quite easy , let's modify the list1 
        // by inserting nodes 

        if(list1 == NULL)return list2;
        if(list2 == NULL)return list1;

        ListNode* ans ;
        if(list1->val <= list2->val)ans = list1;
        else ans = list2;

        if(ans == list2){
            while(list2->next != NULL && list2->next->val <= list1->val){
                list2 = list2->next;
            }

            ListNode* temp = list2->next;
            list2->next = list1;
            list2 = temp;

        }

        while(list1->next != NULL && list2 != NULL){

            if(list2->val <= list1->next->val){
                ListNode* temp1 = list1->next;
                list1->next = list2;
                list1 = list1->next;
                list2 = list2->next;
                list1->next = temp1;

            }
            else{
                list1 = list1->next;
            }

        }

        if(list1->next == NULL) list1->next = list2;

        return ans;
    }
};
